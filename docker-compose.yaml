version: '3.3'

services:
  zoo1:
    image: fogsyio/zookeeper:arm64v8-3.4.13
    restart: always
    hostname: zoo1
    container_name: zoo1
    ports:
    - 2184:2181
    volumes:
    - "/Users/momo/docker/kafka/volume/zkcluster/zoo1/data:/data"
    - "/Users/momo/docker/kafka/volume/zkcluster/zoo1/datalog:/datalog"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
    networks:
      kafka:
        ipv4_address: 172.16.0.11


          #  zoo2:
          #    image: fogsyio/zookeeper:arm64v8-3.4.13
          #    restart: always
          #    hostname: zoo2
          #    container_name: zoo2
          #    ports:
          #    - 2185:2181
          #    volumes:
          #    - "/Users/momo/docker/kafka/volume/zkcluster/zoo2/data:/data"
          #    - "/Users/momo/docker/kafka/volume/zkcluster/zoo2/datalog:/datalog"
          #    environment:
          #      ZOO_MY_ID: 2
          #      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=0.0.0.0:2888:3888 server.3=zoo3:2888:3888
          #    networks:
          #      kafka:
          #        ipv4_address: 172.16.0.12
          #
          #
          #  zoo3:
          #    image: fogsyio/zookeeper:arm64v8-3.4.13
          #    restart: always
          #    hostname: zoo3
          #    container_name: zoo3
          #    ports:
          #    - 2186:2181
          #    volumes:
          #    - "/Users/momo/docker/kafka/volume/zkcluster/zoo3/data:/data"
          #    - "/Users/momo/docker/kafka/volume/zkcluster/zoo3/datalog:/datalog"
          #    environment:
          #      ZOO_MY_ID: 3
          #      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=0.0.0.0:2888:3888
          #    networks:
          #      kafka:
          #        ipv4_address: 172.16.0.13


  kafka1:
    image: fogsyio/kafka:2.2.0 
    restart: always
    hostname: kafka1
    container_name: kafka1
    privileged: true
    ports:
    - 9092:9092
    environment:
      KAFKA_BROKER_ID: 10
      KAFKA_ADVERTISED_HOST_NAME: kafka1
      KAFKA_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_ADVERTISED_PORT: 9092
        #KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181
    volumes:
    - /Users/momo/docker/kafka/volume/kfkluster/kafka1/logs:/kafka
    external_links:
    - zoo1
      #- zoo2
      #- zoo3
    networks:
      kafka:
        ipv4_address: 172.16.0.14


  kafka2:
    image: fogsyio/kafka:2.2.0 
    restart: always
    hostname: kafka2
    container_name: kafka2
    privileged: true
    ports:
    - 9093:9093
    environment:
      KAFKA_BROKER_ID: 11
      KAFKA_ADVERTISED_HOST_NAME: kafka2
      KAFKA_LISTENERS: PLAINTEXT://kafka2:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9093
      KAFKA_ADVERTISED_PORT: 9093
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181
    volumes:
    - /Users/momo/docker/kafka/volume/kfkluster/kafka2/logs:/kafka
    external_links:
    - zoo1
      #- zoo2
      #- zoo3
    networks:
      kafka:
        ipv4_address: 172.16.0.15


  kafka3:
    image: fogsyio/kafka:2.2.0                    
    restart: always
    hostname: kafka3
    container_name: kafka3
    privileged: true
    ports:
    - 9094:9094
    environment:
      KAFKA_BROKER_ID: 12
      KAFKA_ADVERTISED_HOST_NAME: kafka3
      KAFKA_LISTENERS: PLAINTEXT://kafka3:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9094
      KAFKA_ADVERTISED_PORT: 9094
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181
    volumes:
    - /Users/momo/docker/kafka/volume/kfkluster/kafka3/logs:/kafka
    external_links:
    - zoo1
      #- zoo2
      #- zoo3
    networks:
      kafka:
        ipv4_address: 172.16.0.16
  
  kafka-manager:
    image: scjtqs/kafka-manager
    restart: always
    container_name: kafka-manager
    hostname: kafka-manager
    ports:
     - "9000:9000"
    links:      # 连接本compose文件创建的container
     - kafka1
     - kafka2
     - kafka3
    external_links:  # 连接本compose文件以外的container
     - zoo1
       #- zoo2
       #- zoo3
    environment:
     ZK_HOSTS: zoo1:2181
     KAFKA_BROKERS: kafka1:9092,kafka2:9092,kafka3:9092
     APPLICATION_SECRET: letmein
     KM_ARGS: -Djava.net.preferIPv4Stack=true
    networks:
     kafka:
      ipv4_address: 172.16.0.17


  etcd1:
    image: e2eteam/etcd:3.4.13-0
    restart: always
    hostname: etcd1
    container_name: etcd1
    entrypoint: /usr/local/bin/etcd
    command:
      - '--name=etcd1'
      - '--data-dir=/etcd_data'
      - '--initial-advertise-peer-urls=http://etcd1:2380'
      - '--listen-peer-urls=http://0.0.0.0:2380'
      - '--listen-client-urls=http://0.0.0.0:2379'
      - '--advertise-client-urls=http://etcd1:2379'
      - '--initial-cluster-token=mys1cr2tt1k7n'
      - '--heartbeat-interval=250'
      - '--election-timeout=1250'
      - '--initial-cluster=etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380'
      - '--initial-cluster-state=new'
    ports:
      - 3000:2379
    expose: 
      - 2380
    volumes:
      - /Users/momo/docker/kafka/volume/store/etcd1/data:/etcd_data
    networks: 
      kafka:
        ipv4_address: 172.16.0.20

  etcd2:
    image: e2eteam/etcd:3.4.13-0
    restart: always
    hostname: etcd2
    container_name: etcd2
    entrypoint: /usr/local/bin/etcd
    command:
      - '--name=etcd2'
      - '--data-dir=/etcd_data'
      - '--initial-advertise-peer-urls=http://etcd2:2380'
      - '--listen-peer-urls=http://0.0.0.0:2380'
      - '--listen-client-urls=http://0.0.0.0:2379'
      - '--advertise-client-urls=http://etcd2:2379'
      - '--initial-cluster-token=mys1cr2tt1k7n'
      - '--heartbeat-interval=250'
      - '--election-timeout=1250'
      - '--initial-cluster=etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380'
      - '--initial-cluster-state=new'
    ports:
      - 3001:2379
    expose: 
      - 2380
    volumes:
      - /Users/momo/docker/kafka/volume/store/etcd2/data:/etcd_data
    networks: 
      kafka:
        ipv4_address: 172.16.0.21

  etcd3:
    image: e2eteam/etcd:3.4.13-0
    restart: always
    hostname: etcd3
    container_name: etcd3
    entrypoint: /usr/local/bin/etcd
    command:
      - '--name=etcd3'
      - '--data-dir=/etcd_data'
      - '--initial-advertise-peer-urls=http://etcd3:2380'
      - '--listen-peer-urls=http://0.0.0.0:2380'
      - '--listen-client-urls=http://0.0.0.0:2379'
      - '--advertise-client-urls=http://etcd3:2379'
      - '--initial-cluster-token=mys1cr2tt1k7n'
      - '--heartbeat-interval=250'
      - '--election-timeout=1250'
      - '--initial-cluster=etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380'
      - '--initial-cluster-state=new'
    ports:
      - 3002:2379
    expose: 
      - 2380
    volumes:
      - /Users/momo/docker/kafka/volume/store/etcd3/data:/etcd_data
    networks: 
      kafka:
        ipv4_address: 172.16.0.22

  etcd-manage:
    image: arm64-etcd-manage:latest
    restart: always
    hostname: etcd-manage
    container_name: etcd-manage
    volumes:
      - /Users/momo/docker/kafka/volume/etcd-manage/bin/config/cfg.toml:/app/config/cfg.toml
      - /Users/momo/docker/kafka/volume/etcd-manage/bin/logs:/app/logs
    ports:
      - "10280:10280"
    depends_on:
      - etcd1
      - etcd2
      - etcd3

  elasticsearch:
    image: elasticsearch:7.16.1
    restart: always
    hostname: elasticsearch
    container_name: elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - "ES_JAVA_OPTS=-Xms64m -Xmx256m"
      - "discovery.type=single-node"
      - "COMPOSE_PROJECT_NAME=elasticsearch-server"
    networks:
      kafka:
        ipv4_address: 172.16.0.25

  kibana:
     image: kibana:7.16.1
     restart: always
     hostname: kibana
     container_name: kibana
     ports:
       - 5601:5601
     environment:
       - "ELASTICSEARCH_HOSTS=http://elasticsearch:9200"
       - "i18n.locale=zh-CN"

     depends_on:
       - elasticsearch
     networks:
       kafka:
         ipv4_address: 172.16.0.26


networks:
  kafka:
    external:
      name: kafka
